MyPortFolio
## README.md 파일 작성.

## 1. 프로젝트 구조 생성.
	1.1. assets/styles, icons 폴더, styles/main,color,font.scss 파일 생성.
	1.2. main.scss가 전역적으로 접목될 수 있도록 vite.config.ts에서 선언. (url 오류가 나서 npm install @types/node)
	1.3. tsconfig.json 세팅 수정. baseUrl과 path 추가.
	1.4. vite.config.ts에서 fileURLToPath, URL을 통해 ./src를 @로 치환할 수 있게 선언
	1.5. tsconfig.json에서 @가 src의 모든 파일에 접근할 수 있도록 추가.

## 2. 컴포넌트, 기본 구조 설정
	2.1. tailwind.config.js 수정(모듈화), 
	이건 v3버전에서만 가능해서 앞으로는 이런 명령어를 입력해줘야 함.
	npm install -D tailwindcss@3 postcss autoprefixer
	npx tailwindcss init -p
	2.2. tailwind.css 파일 생성 후 @tailwind base; @tailwind components; @tailwind utilities; import
	2.3. components에 Card/, Detail/Profile, Project, Stack, Menu.vue, Window_Header.vue 파일 생성 후 둘 다 App.vue에서 import 
	pages/Home,Intro,Loading.vue 생성.
	2.4. mkdir images, styles/color.scss, main.scss, font.scss, _mixin.scss(반응형 처리), variable.scss(반응형-디바이스에 따라 크기 조정.)
	2.5. color/font.scss 깃허브에서 복붙. 
	main.scss에서 각각 scss 파일 import 후 작성.
	_mixin.scss(반응형 처리), variable.scss(반응형-디바이스에 따라 크기 조정.)

## 3. 뷰 라우터 설정
	** 여기서 router 설치 잊지 말고 해주기 **
	npm install vue-router@4
	3.1. router/index.ts 생성. router 관련 import 후 페이지 about.vue, index.vue 생성. main.ts에서 router import
	3.2. App vue에서  <RouterView />하면 home.vue 페이지 나옴. 기본 경로를 /로 하고 home.vue 컴포넌트를 바라보게 만듦. 	
	about을 링크에 넣으면 about.vue로 이동. webHashHistory를 썼기 때문에 #이 붙음. 
	3.3. 페이지 라우팅 index.ts 파일에서 Intro과 Home 라우팅. main.ts에서 import 


## 4. 웹 퍼블리싱
	4.1. Intro.vue 퍼블리싱.
	4.2. start를 누르면 Loading.vue로 잠깐 3초 동안 있다가 Home.vue로 이동하도록 구현
		index.ts에서 Loading 경로 추가. 
		setTimeout 함수 사용. 
		Menu.vue에서 router-link 태그 사용. start에 적용.
	4.3. Loading.vue 퍼블리싱.
	4.4. Home.vue 퍼블리싱.
	4.5. Profile, Stack, Project 카드를 누르면 창이 뜨도록 구현.
		Profile: ts의 defineProps로 isActive를 재정의.
		export를 쓰는 경우 <script setup>에서 허용되지 않아 Home.vue에서 toggleProfile 함수 정의.
		isActive 상태를 ref를 통해 관리하고, Profile component에 전달.
	4.6. Profile.vue 퍼블리싱. css가 적용되지 않아 구조 변경.
	4.7. Stack, Project 퍼블리싱. toggleStack, toggleProject 함수로 별도로 정의함. 
	독자적인 페이지를 만들어줘야 해서 별도의 함수 정의. Profile 함수도 수정.
	